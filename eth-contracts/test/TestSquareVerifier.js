// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");
const json = require("../../zokrates/code/square/proof.json");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
contract("TestSquareVerifier", accounts => {
    
    const account_one = accounts[0];

    describe("Test verifier", function () {
        beforeEach(async function () {
            this.contract = await Verifier.new({from: account_one});
        })

        // Test verification with correct proof
        it("Verification with correct proof", async function () {
            const result = await this.contract.verifyTx.call(json.proof.a, json.proof.b, json.proof.c, json.inputs);
            assert.equal(result, true, "Verification failed");
        })

        // Test verification with incorrect proof
        it("Verification with incorrect proof", async function () {
            const incorrect = {
                "inputs": ["0x0000000000000000000000000000000000000000000000000000000000000004", "0x0000000000000000000000000000000000000000000000000000000000000002"]
            };
            
            const result = await this.contract.verifyTx.call(json.proof.a, json.proof.b, json.proof.c, incorrect.inputs);
            assert.equal(result, false, "Verification should fail");
        })
    });
})
